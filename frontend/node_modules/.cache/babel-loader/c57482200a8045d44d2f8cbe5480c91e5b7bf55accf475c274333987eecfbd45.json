{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\common\\\\Desktop\\\\Assignment1\\\\frontend\\\\src\\\\admin\\\\UserManagement.jsx\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport { UserContext } from \"../login/UserContext\";\nimport Navbar from \"../util/Navbar\";\nimport MultiSelectDropdown from \"./MultiSelectDropdown\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst UserManagement = () => {\n  _s();\n  const [accounts, setAccounts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [groups, setGroups] = useState([]);\n  const {\n    state\n  } = useContext(UserContext);\n  const [newGroup, setNewGroup] = useState(\"\");\n  const navigate = useNavigate();\n  const [editIndex, setEditIndex] = useState(-1);\n  const [editValues, setEditValues] = useState({\n    username: \"\",\n    email: \"\",\n    password: \"\",\n    groupname: [],\n    disabled: false\n  });\n  const [newUser, setNewUser] = useState({\n    username: \"\",\n    email: \"\",\n    password: \"\",\n    groupname: [],\n    disabled: false\n  });\n  useEffect(() => {\n    if (!state.isAuthenticated) {\n      navigate(\"/\");\n      return;\n    }\n    const fetchData = async () => {\n      try {\n        const accountsResponse = await axios.get(\"http://localhost:8080/getAllAccounts\", {\n          withCredentials: true\n        });\n        const allAccounts = accountsResponse.data;\n        const groupRequests = allAccounts.map(account => axios.get(`http://localhost:8080/getGroupbyUsers/${account.username}`, {\n          withCredentials: true\n        }));\n        const groupsResponses = await Promise.all(groupRequests);\n        const accountsWithGroups = allAccounts.map((account, index) => {\n          const groupsForUser = groupsResponses[index].data.map(g => g.groupname);\n          return {\n            ...account,\n            groupname: groupsForUser\n          };\n        });\n        setAccounts(accountsWithGroups);\n        const groupsResponse = await axios.get(\"http://localhost:8080/getAllGroups\", {\n          withCredentials: true\n        });\n        setGroups(groupsResponse.data.map(group => group.groupname));\n        setLoading(false);\n      } catch (error) {\n        console.error(\"Error fetching data:\", error.response ? error.response.data : error.message);\n        setError(\"Error fetching data. Check the console.\");\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, [state.isAuthenticated, navigate]);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 21\n  }, this);\n  const handleEdit = index => {\n    const accountToEdit = accounts[index];\n    setEditIndex(index);\n    setEditValues({\n      username: accountToEdit.username,\n      email: accountToEdit.email,\n      password: accountToEdit.password,\n      groupname: accountToEdit.groupname || [],\n      disabled: accountToEdit.disabled\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      await axios.put(`http://localhost:8080/updateUser/${editValues.username}`, {\n        email: editValues.email,\n        password: editValues.password,\n        disabled: editValues.disabled\n      });\n      const account = accounts.find(acc => acc.username === editValues.username);\n      const existingGroups = account.groupname || [];\n      const updatedGroups = editValues.groupname;\n      const groupsToAdd = updatedGroups.filter(group => !existingGroups.includes(group));\n      const groupsToRemove = existingGroups.filter(group => !updatedGroups.includes(group));\n      if (groupsToAdd.length > 0) {\n        for (const group of groupsToAdd) {\n          await axios.post(\"http://localhost:8080/addGroup\", {\n            groupname: group,\n            username: editValues.username\n          });\n        }\n      }\n      if (groupsToRemove.length > 0) {\n        for (const group of groupsToRemove) {\n          await axios.delete(`http://localhost:8080/removeGroup`, {\n            data: {\n              groupname: group,\n              userID: editValues.username\n            }\n          });\n        }\n      }\n      const updatedAccounts = accounts.map((account, index) => index === editIndex ? {\n        ...account,\n        ...editValues\n      } : account);\n      setAccounts(updatedAccounts);\n      setEditIndex(-1);\n    } catch (error) {\n      console.error(\"Error updating user:\", error);\n    }\n  };\n  const cancelEdit = () => {\n    setEditIndex(-1);\n  };\n  const handleCreateUser = async () => {\n    try {\n      // Construct the new user details\n      const newUserDetails = {\n        username: newUser.username,\n        email: newUser.email,\n        password: newUser.password,\n        groupname: newUser.groupname.join(\",\"),\n        disabled: newUser.disabled\n      };\n      console.log(newUserDetails);\n\n      // Send a POST request to create the new user\n      const response = await axios.post(\"http://localhost:8080/createAccount\", newUserDetails, {\n        withCredentials: true\n      });\n      console.log(\"User created successfully:\", response.data);\n\n      // Add the new user to the accounts state\n      setAccounts([...accounts, {\n        ...newUserDetails,\n        groupname: newUser.groupname\n      }]);\n      for (const group of newUser.groupname) {\n        await axios.post(\"http://localhost:8080/addGroup\", {\n          groupname: group,\n          username: newUser.username\n        });\n      }\n\n      // Reset the newUser state\n      setNewUser({\n        username: \"\",\n        email: \"\",\n        password: \"\",\n        groupname: [],\n        disabled: false\n      });\n    } catch (error) {\n      console.error(\"Error creating user:\", error);\n    }\n  };\n  const handleGroupChange = selectedGroups => {\n    setEditValues({\n      ...editValues,\n      groupname: selectedGroups\n    });\n  };\n  const handleNewUserGroupChange = selectedGroups => {\n    setNewUser({\n      ...newUser,\n      groupname: selectedGroups\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-100 flex flex-col items-center\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full max-w-6xl bg-white p-6 rounded-lg shadow-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-2xl font-bold mb-4 text-center\",\n        children: \"User Management\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"overflow-x-auto mb-4\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"min-w-full bg-white\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            className: \"bg-gray-200\",\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"py-2 px-4 border\",\n                children: \"Username\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"py-2 px-4 border\",\n                children: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 238,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"py-2 px-4 border\",\n                children: \"Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 239,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"py-2 px-4 border\",\n                children: \"Group\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 240,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"py-2 px-4 border\",\n                children: \"Status\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"py-2 px-4 border\",\n                children: \"Actions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 242,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: accounts.map((account, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"py-2 px-4 border\",\n                children: account.username\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 248,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"py-2 px-4 border\",\n                children: editIndex === index ? /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: editValues.email,\n                  onChange: e => setEditValues({\n                    ...editValues,\n                    email: e.target.value\n                  }),\n                  className: \"p-2 border border-gray-300 rounded\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 252,\n                  columnNumber: 23\n                }, this) : `${account.email}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"py-2 px-4 border\",\n                children: editIndex === index ? /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"password\",\n                  value: editValues.password,\n                  onChange: e => setEditValues({\n                    ...editValues,\n                    password: e.target.value\n                  }),\n                  className: \"p-2 border border-gray-300 rounded\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 270,\n                  columnNumber: 23\n                }, this) : \"******\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 268,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"py-2 px-4 border\",\n                children: editIndex === index ? /*#__PURE__*/_jsxDEV(MultiSelectDropdown, {\n                  options: groups,\n                  selectedOptions: editValues.groupname,\n                  onChange: handleGroupChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 287,\n                  columnNumber: 23\n                }, this) : (String(account.groupname) || \"\").split(\",\").map(group => group.trim()).join(\", \")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 285,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"py-2 px-4 border\",\n                children: editIndex === index ? /*#__PURE__*/_jsxDEV(\"select\", {\n                  value: editValues.disabled ? \"Disabled\" : \"Enabled\",\n                  onChange: e => setEditValues({\n                    ...editValues,\n                    disabled: e.target.value === \"Disabled\"\n                  }),\n                  className: \"p-2 border border-gray-300 rounded\",\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    children: \"Enabled\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 312,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    children: \"Disabled\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 313,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 302,\n                  columnNumber: 23\n                }, this) : account.disabled ? \"Disabled\" : \"Enabled\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 300,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"py-2 px-4 border\",\n                children: editIndex === index ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"bg-green-500 text-white p-1 rounded mr-2\",\n                    onClick: handleSubmit,\n                    children: \"Save\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 324,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"bg-red-500 text-white p-1 rounded\",\n                    onClick: cancelEdit,\n                    children: \"Cancel\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 330,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true) : /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"bg-blue-500 text-white p-1 rounded\",\n                  onClick: () => handleEdit(index),\n                  children: \"Edit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 338,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 321,\n                columnNumber: 19\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-end\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Username\",\n            value: newUser.username,\n            onChange: e => setNewUser({\n              ...newUser,\n              username: e.target.value\n            }),\n            className: \"p-2 border border-gray-300 rounded\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 353,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Email\",\n            value: newUser.email,\n            onChange: e => setNewUser({\n              ...newUser,\n              email: e.target.value\n            }),\n            className: \"p-2 border border-gray-300 rounded mx-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            placeholder: \"Password\",\n            value: newUser.password,\n            onChange: e => setNewUser({\n              ...newUser,\n              password: e.target.value\n            }),\n            className: \"p-2 border border-gray-300 rounded mx-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 371,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MultiSelectDropdown, {\n            options: groups,\n            selectedOptions: newUser.groupname,\n            onChange: handleNewUserGroupChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 380,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: newUser.disabled ? \"Disabled\" : \"Enabled\",\n            onChange: e => setEditValues({\n              ...newUser,\n              disabled: e.target.value === \"Disabled\"\n            }),\n            className: \"p-2 border border-gray-300 rounded\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Enabled\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 395,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Disabled\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 396,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 385,\n            columnNumber: 13\n          }, this), \") : account.disabled ? ( \\\"Disabled\\\" ) : ( \\\"Enabled\\\" )\", /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"bg-green-500 text-white p-2 rounded ml-2\",\n            onClick: handleCreateUser,\n            children: \"Create User\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 399,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 228,\n    columnNumber: 5\n  }, this);\n};\n_s(UserManagement, \"mzVqalqMybkF6Pq9kWr7IcycpB4=\", false, function () {\n  return [useNavigate];\n});\n_c = UserManagement;\nexport default UserManagement;\nvar _c;\n$RefreshReg$(_c, \"UserManagement\");","map":{"version":3,"names":["React","useContext","useEffect","useState","axios","useNavigate","UserContext","Navbar","MultiSelectDropdown","jsxDEV","_jsxDEV","Fragment","_Fragment","UserManagement","_s","accounts","setAccounts","loading","setLoading","error","setError","groups","setGroups","state","newGroup","setNewGroup","navigate","editIndex","setEditIndex","editValues","setEditValues","username","email","password","groupname","disabled","newUser","setNewUser","isAuthenticated","fetchData","accountsResponse","get","withCredentials","allAccounts","data","groupRequests","map","account","groupsResponses","Promise","all","accountsWithGroups","index","groupsForUser","g","groupsResponse","group","console","response","message","children","fileName","_jsxFileName","lineNumber","columnNumber","handleEdit","accountToEdit","handleSubmit","e","preventDefault","put","find","acc","existingGroups","updatedGroups","groupsToAdd","filter","includes","groupsToRemove","length","post","delete","userID","updatedAccounts","cancelEdit","handleCreateUser","newUserDetails","join","log","handleGroupChange","selectedGroups","handleNewUserGroupChange","className","type","value","onChange","target","options","selectedOptions","String","split","trim","onClick","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/common/Desktop/Assignment1/frontend/src/admin/UserManagement.jsx"],"sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { UserContext } from \"../login/UserContext\";\r\nimport Navbar from \"../util/Navbar\";\r\nimport MultiSelectDropdown from \"./MultiSelectDropdown\";\r\n\r\nconst UserManagement = () => {\r\n  const [accounts, setAccounts] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(\"\");\r\n  const [groups, setGroups] = useState([]);\r\n  const { state } = useContext(UserContext);\r\n  const [newGroup, setNewGroup] = useState(\"\");\r\n  const navigate = useNavigate();\r\n\r\n  const [editIndex, setEditIndex] = useState(-1);\r\n  const [editValues, setEditValues] = useState({\r\n    username: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    groupname: [],\r\n    disabled: false,\r\n  });\r\n\r\n  const [newUser, setNewUser] = useState({\r\n    username: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    groupname: [],\r\n    disabled: false,\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (!state.isAuthenticated) {\r\n      navigate(\"/\");\r\n      return;\r\n    }\r\n\r\n    const fetchData = async () => {\r\n      try {\r\n        const accountsResponse = await axios.get(\r\n          \"http://localhost:8080/getAllAccounts\",\r\n          { withCredentials: true }\r\n        );\r\n        const allAccounts = accountsResponse.data;\r\n\r\n        const groupRequests = allAccounts.map((account) =>\r\n          axios.get(\r\n            `http://localhost:8080/getGroupbyUsers/${account.username}`,\r\n            {\r\n              withCredentials: true,\r\n            }\r\n          )\r\n        );\r\n\r\n        const groupsResponses = await Promise.all(groupRequests);\r\n\r\n        const accountsWithGroups = allAccounts.map((account, index) => {\r\n          const groupsForUser = groupsResponses[index].data.map(\r\n            (g) => g.groupname\r\n          );\r\n          return {\r\n            ...account,\r\n            groupname: groupsForUser,\r\n          };\r\n        });\r\n\r\n        setAccounts(accountsWithGroups);\r\n\r\n        const groupsResponse = await axios.get(\r\n          \"http://localhost:8080/getAllGroups\",\r\n          { withCredentials: true }\r\n        );\r\n        setGroups(groupsResponse.data.map((group) => group.groupname));\r\n\r\n        setLoading(false);\r\n      } catch (error) {\r\n        console.error(\r\n          \"Error fetching data:\",\r\n          error.response ? error.response.data : error.message\r\n        );\r\n        setError(\"Error fetching data. Check the console.\");\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [state.isAuthenticated, navigate]);\r\n\r\n  if (loading) return <div>Loading...</div>;\r\n  if (error) return <div>{error}</div>;\r\n\r\n  const handleEdit = (index) => {\r\n    const accountToEdit = accounts[index];\r\n    setEditIndex(index);\r\n    setEditValues({\r\n      username: accountToEdit.username,\r\n      email: accountToEdit.email,\r\n      password: accountToEdit.password,\r\n      groupname: accountToEdit.groupname || [],\r\n      disabled: accountToEdit.disabled,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      await axios.put(\r\n        `http://localhost:8080/updateUser/${editValues.username}`,\r\n        {\r\n          email: editValues.email,\r\n          password: editValues.password,\r\n          disabled: editValues.disabled,\r\n        }\r\n      );\r\n\r\n      const account = accounts.find(\r\n        (acc) => acc.username === editValues.username\r\n      );\r\n      const existingGroups = account.groupname || [];\r\n      const updatedGroups = editValues.groupname;\r\n\r\n      const groupsToAdd = updatedGroups.filter(\r\n        (group) => !existingGroups.includes(group)\r\n      );\r\n      const groupsToRemove = existingGroups.filter(\r\n        (group) => !updatedGroups.includes(group)\r\n      );\r\n\r\n      if (groupsToAdd.length > 0) {\r\n        for (const group of groupsToAdd) {\r\n          await axios.post(\"http://localhost:8080/addGroup\", {\r\n            groupname: group,\r\n            username: editValues.username,\r\n          });\r\n        }\r\n      }\r\n\r\n      if (groupsToRemove.length > 0) {\r\n        for (const group of groupsToRemove) {\r\n          await axios.delete(`http://localhost:8080/removeGroup`, {\r\n            data: { groupname: group, userID: editValues.username },\r\n          });\r\n        }\r\n      }\r\n\r\n      const updatedAccounts = accounts.map((account, index) =>\r\n        index === editIndex ? { ...account, ...editValues } : account\r\n      );\r\n      setAccounts(updatedAccounts);\r\n      setEditIndex(-1);\r\n    } catch (error) {\r\n      console.error(\"Error updating user:\", error);\r\n    }\r\n  };\r\n\r\n  const cancelEdit = () => {\r\n    setEditIndex(-1);\r\n  };\r\n\r\n  const handleCreateUser = async () => {\r\n    try {\r\n      // Construct the new user details\r\n      const newUserDetails = {\r\n        username: newUser.username,\r\n        email: newUser.email,\r\n        password: newUser.password,\r\n        groupname: newUser.groupname.join(\",\"),\r\n        disabled: newUser.disabled,\r\n      };\r\n\r\n      console.log(newUserDetails);\r\n\r\n      // Send a POST request to create the new user\r\n      const response = await axios.post(\r\n        \"http://localhost:8080/createAccount\",\r\n        newUserDetails,\r\n        { withCredentials: true }\r\n      );\r\n\r\n      console.log(\"User created successfully:\", response.data);\r\n\r\n      // Add the new user to the accounts state\r\n      setAccounts([\r\n        ...accounts,\r\n        {\r\n          ...newUserDetails,\r\n          groupname: newUser.groupname,\r\n        },\r\n      ]);\r\n\r\n      for (const group of newUser.groupname) {\r\n        await axios.post(\"http://localhost:8080/addGroup\", {\r\n          groupname: group,\r\n          username: newUser.username,\r\n        });\r\n      }\r\n\r\n      // Reset the newUser state\r\n      setNewUser({\r\n        username: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        groupname: [],\r\n        disabled: false,\r\n      });\r\n    } catch (error) {\r\n      console.error(\"Error creating user:\", error);\r\n    }\r\n  };\r\n\r\n  const handleGroupChange = (selectedGroups) => {\r\n    setEditValues({\r\n      ...editValues,\r\n      groupname: selectedGroups,\r\n    });\r\n  };\r\n\r\n  const handleNewUserGroupChange = (selectedGroups) => {\r\n    setNewUser({\r\n      ...newUser,\r\n      groupname: selectedGroups,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-100 flex flex-col items-center\">\r\n      <Navbar />\r\n\r\n      <div className=\"w-full max-w-6xl bg-white p-6 rounded-lg shadow-lg\">\r\n        <h1 className=\"text-2xl font-bold mb-4 text-center\">User Management</h1>\r\n        <div className=\"overflow-x-auto mb-4\">\r\n          <table className=\"min-w-full bg-white\">\r\n            <thead className=\"bg-gray-200\">\r\n              <tr>\r\n                <th className=\"py-2 px-4 border\">Username</th>\r\n                <th className=\"py-2 px-4 border\">Email</th>\r\n                <th className=\"py-2 px-4 border\">Password</th>\r\n                <th className=\"py-2 px-4 border\">Group</th>\r\n                <th className=\"py-2 px-4 border\">Status</th>\r\n                <th className=\"py-2 px-4 border\">Actions</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {accounts.map((account, index) => (\r\n                <tr key={index}>\r\n                  <td className=\"py-2 px-4 border\">{account.username}</td>\r\n\r\n                  <td className=\"py-2 px-4 border\">\r\n                    {editIndex === index ? (\r\n                      <input\r\n                        type=\"text\"\r\n                        value={editValues.email}\r\n                        onChange={(e) =>\r\n                          setEditValues({\r\n                            ...editValues,\r\n                            email: e.target.value,\r\n                          })\r\n                        }\r\n                        className=\"p-2 border border-gray-300 rounded\"\r\n                      />\r\n                    ) : (\r\n                      `${account.email}`\r\n                    )}\r\n                  </td>\r\n\r\n                  <td className=\"py-2 px-4 border\">\r\n                    {editIndex === index ? (\r\n                      <input\r\n                        type=\"password\"\r\n                        value={editValues.password}\r\n                        onChange={(e) =>\r\n                          setEditValues({\r\n                            ...editValues,\r\n                            password: e.target.value,\r\n                          })\r\n                        }\r\n                        className=\"p-2 border border-gray-300 rounded\"\r\n                      />\r\n                    ) : (\r\n                      \"******\"\r\n                    )}\r\n                  </td>\r\n                  <td className=\"py-2 px-4 border\">\r\n                    {editIndex === index ? (\r\n                      <MultiSelectDropdown\r\n                        options={groups}\r\n                        selectedOptions={editValues.groupname}\r\n                        onChange={handleGroupChange}\r\n                      />\r\n                    ) : (\r\n                      (String(account.groupname) || \"\")\r\n                        .split(\",\")\r\n                        .map((group) => group.trim())\r\n                        .join(\", \")\r\n                    )}\r\n                  </td>\r\n\r\n                  <td className=\"py-2 px-4 border\">\r\n                    {editIndex === index ? (\r\n                      <select\r\n                        value={editValues.disabled ? \"Disabled\" : \"Enabled\"}\r\n                        onChange={(e) =>\r\n                          setEditValues({\r\n                            ...editValues,\r\n                            disabled: e.target.value === \"Disabled\",\r\n                          })\r\n                        }\r\n                        className=\"p-2 border border-gray-300 rounded\"\r\n                      >\r\n                        <option>Enabled</option>\r\n                        <option>Disabled</option>\r\n                      </select>\r\n                    ) : account.disabled ? (\r\n                      \"Disabled\"\r\n                    ) : (\r\n                      \"Enabled\"\r\n                    )}\r\n                  </td>\r\n                  <td className=\"py-2 px-4 border\">\r\n                    {editIndex === index ? (\r\n                      <>\r\n                        <button\r\n                          className=\"bg-green-500 text-white p-1 rounded mr-2\"\r\n                          onClick={handleSubmit}\r\n                        >\r\n                          Save\r\n                        </button>\r\n                        <button\r\n                          className=\"bg-red-500 text-white p-1 rounded\"\r\n                          onClick={cancelEdit}\r\n                        >\r\n                          Cancel\r\n                        </button>\r\n                      </>\r\n                    ) : (\r\n                      <button\r\n                        className=\"bg-blue-500 text-white p-1 rounded\"\r\n                        onClick={() => handleEdit(index)}\r\n                      >\r\n                        Edit\r\n                      </button>\r\n                    )}\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n        <div className=\"flex justify-end\">\r\n          <div className=\"flex items-center\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Username\"\r\n              value={newUser.username}\r\n              onChange={(e) =>\r\n                setNewUser({ ...newUser, username: e.target.value })\r\n              }\r\n              className=\"p-2 border border-gray-300 rounded\"\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Email\"\r\n              value={newUser.email}\r\n              onChange={(e) =>\r\n                setNewUser({ ...newUser, email: e.target.value })\r\n              }\r\n              className=\"p-2 border border-gray-300 rounded mx-2\"\r\n            />\r\n            <input\r\n              type=\"password\"\r\n              placeholder=\"Password\"\r\n              value={newUser.password}\r\n              onChange={(e) =>\r\n                setNewUser({ ...newUser, password: e.target.value })\r\n              }\r\n              className=\"p-2 border border-gray-300 rounded mx-2\"\r\n            />\r\n            <MultiSelectDropdown\r\n              options={groups}\r\n              selectedOptions={newUser.groupname}\r\n              onChange={handleNewUserGroupChange}\r\n            />\r\n            <select\r\n              value={newUser.disabled ? \"Disabled\" : \"Enabled\"}\r\n              onChange={(e) =>\r\n                setEditValues({\r\n                  ...newUser,\r\n                  disabled: e.target.value === \"Disabled\",\r\n                })\r\n              }\r\n              className=\"p-2 border border-gray-300 rounded\"\r\n            >\r\n              <option>Enabled</option>\r\n              <option>Disabled</option>\r\n            </select>\r\n            ) : account.disabled ? ( \"Disabled\" ) : ( \"Enabled\" )\r\n            <button\r\n              className=\"bg-green-500 text-white p-2 rounded ml-2\"\r\n              onClick={handleCreateUser}\r\n            >\r\n              Create User\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserManagement;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}