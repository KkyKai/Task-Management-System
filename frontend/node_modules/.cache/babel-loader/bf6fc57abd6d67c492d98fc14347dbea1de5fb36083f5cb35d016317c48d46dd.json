{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\common\\\\Desktop\\\\Assignment1\\\\frontend\\\\src\\\\login\\\\UserContext.jsx\",\n  _s = $RefreshSig$();\nimport React, { createContext, useReducer } from \"react\";\nimport { produce } from \"immer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserContext = /*#__PURE__*/createContext(null);\nconst initialState = {\n  isAuthenticated: false,\n  user: null,\n  role: null // Include role in the state\n};\nconst reducer = produce((draft, action) => {\n  switch (action.type) {\n    case \"LOGIN_SUCCESS\":\n      draft.isAuthenticated = true;\n      draft.user = action.payload.user;\n      draft.role = action.payload.role; // Store the role\n      break;\n    case \"LOGOUT\":\n      draft.isAuthenticated = false;\n      draft.user = null;\n      draft.role = null;\n      break;\n    default:\n      return draft;\n  }\n});\nconst UserProvider = ({\n  children\n}) => {\n  _s();\n  const [state, dispatch] = useReducer(reducer, initialState);\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: {\n      state,\n      dispatch\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(UserProvider, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n_c = UserProvider;\nexport { UserContext, UserProvider };\nvar _c;\n$RefreshReg$(_c, \"UserProvider\");","map":{"version":3,"names":["React","createContext","useReducer","produce","jsxDEV","_jsxDEV","UserContext","initialState","isAuthenticated","user","role","reducer","draft","action","type","payload","UserProvider","children","_s","state","dispatch","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/common/Desktop/Assignment1/frontend/src/login/UserContext.jsx"],"sourcesContent":["import React, { createContext, useReducer } from \"react\";\r\nimport { produce } from \"immer\";\r\n\r\nconst UserContext = createContext(null);\r\n\r\nconst initialState = {\r\n  isAuthenticated: false,\r\n  user: null,\r\n  role: null, // Include role in the state\r\n};\r\n\r\nconst reducer = produce((draft, action) => {\r\n  switch (action.type) {\r\n    case \"LOGIN_SUCCESS\":\r\n      draft.isAuthenticated = true;\r\n      draft.user = action.payload.user;\r\n      draft.role = action.payload.role; // Store the role\r\n      break;\r\n    case \"LOGOUT\":\r\n      draft.isAuthenticated = false;\r\n      draft.user = null;\r\n      draft.role = null;\r\n      break;\r\n    default:\r\n      return draft;\r\n  }\r\n});\r\n\r\nconst UserProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n  return (\r\n    <UserContext.Provider value={{ state, dispatch }}>\r\n      {children}\r\n    </UserContext.Provider>\r\n  );\r\n};\r\n\r\nexport { UserContext, UserProvider };\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,QAAQ,OAAO;AACxD,SAASC,OAAO,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,MAAMC,WAAW,gBAAGL,aAAa,CAAC,IAAI,CAAC;AAEvC,MAAMM,YAAY,GAAG;EACnBC,eAAe,EAAE,KAAK;EACtBC,IAAI,EAAE,IAAI;EACVC,IAAI,EAAE,IAAI,CAAE;AACd,CAAC;AAED,MAAMC,OAAO,GAAGR,OAAO,CAAC,CAACS,KAAK,EAAEC,MAAM,KAAK;EACzC,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAK,eAAe;MAClBF,KAAK,CAACJ,eAAe,GAAG,IAAI;MAC5BI,KAAK,CAACH,IAAI,GAAGI,MAAM,CAACE,OAAO,CAACN,IAAI;MAChCG,KAAK,CAACF,IAAI,GAAGG,MAAM,CAACE,OAAO,CAACL,IAAI,CAAC,CAAC;MAClC;IACF,KAAK,QAAQ;MACXE,KAAK,CAACJ,eAAe,GAAG,KAAK;MAC7BI,KAAK,CAACH,IAAI,GAAG,IAAI;MACjBG,KAAK,CAACF,IAAI,GAAG,IAAI;MACjB;IACF;MACE,OAAOE,KAAK;EAChB;AACF,CAAC,CAAC;AAEF,MAAMI,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACrC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGlB,UAAU,CAACS,OAAO,EAAEJ,YAAY,CAAC;EAC3D,oBACEF,OAAA,CAACC,WAAW,CAACe,QAAQ;IAACC,KAAK,EAAE;MAAEH,KAAK;MAAEC;IAAS,CAAE;IAAAH,QAAA,EAC9CA;EAAQ;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACR,EAAA,CAPIF,YAAY;AAAAW,EAAA,GAAZX,YAAY;AASlB,SAASV,WAAW,EAAEU,YAAY;AAAG,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}